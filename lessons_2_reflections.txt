What happens when you initialise a repository? Why do you need to do it?
When you initialise a repository it creates turns a normal folder into a git repository that changes can be tracked in. This is needed because otherwise the folder would no be under version control.

How is the staging area different from the working directory and the repository? What value do you think it offers?
Staging area is different from the working directory is all files in the working directory aren't nescessary in the staging area.
Staging area is different from the repository as files in the staging area are not avaliable in version control as such yet but are ready to be commited to a repository.
What value this adds means you can pick and choose what you want to commit.

How can you use the staging area to make sure you have one commit per logical change?
By control what files are commited -> adding only files that make sense to commit.

What are some situations when branches would be helpful in keeping history organised? How would branches help?
Some situations would be:
-testing an idea out this would help because you wouldn't make changes to the main working code and could disregard if necessary
-making a different version for another users need - this would help because you could make changes needed for another user but majority of users could still use orginal 

How do the diagrams help you visualise the branch strcture?
Helps understand the commits and their parents/child relationship.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
Merging two branches together makes 1 branch with the first commit with 2 or more parents which relate to the orginal branch). We represent it in the diagram like we do to understand where the branch comes from.